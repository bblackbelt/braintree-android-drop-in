apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.bblackbelt.dropin'

def LOCALHOST_IP = System.properties['LOCALHOST_IP'] ?: '"10.0.2.2"';
def GATEWAY_IP = System.properties['GATEWAY_IP'] ?: '"10.0.2.2"';
def GATEWAY_PORT = System.properties['GATEWAY_PORT'] ?: '"3000"';

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 58
        versionName '3.0.4'

        consumerProguardFiles 'proguard.pro'

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    resourcePrefix 'bt_'

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
    }
}

android.buildTypes.debug { type ->
    type.buildConfigField 'String', 'LOCALHOST_IP', LOCALHOST_IP
    type.buildConfigField 'String', 'GATEWAY_IP', GATEWAY_IP
    type.buildConfigField 'String', 'GATEWAY_PORT', GATEWAY_PORT
}

dependencies {
    compile 'com.braintreepayments.api:braintree:2.3.11'
    compile 'com.android.support:cardview-v7:[25.0.0,26.0.0)'
    compile 'com.braintreepayments:card-form:3.0.2'
    compile 'com.google.android.gms:play-services-wallet:[9.0.0,10.0.0)'

    testCompile 'org.powermock:powermock-module-junit4:1.6.6'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testCompile 'org.powermock:powermock-api-mockito:1.6.6'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.6'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.skyscreamer:jsonassert:1.4.0'
    testCompile 'com.squareup.assertj:assertj-android:1.1.1'
}

/* maven deploy + signing */
task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocsJar
    archives sourcesJar
}


